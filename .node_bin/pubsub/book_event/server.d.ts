import type { BookEvent } from '../map-reduce';
export declare const events: {
    $match: (ids: (`test-${number}-${number}` | `test-${number}-top` | `lobby-${number}-${number}` | `lobby-${number}-top` | `offparty-${number}-${number}` | `offparty-${number}-top` | `wolf-${number}-${number}` | `wolf-${number}-top` | `allstar-${number}-${number}` | `allstar-${number}-top` | `ultimate-${number}-${number}` | `ultimate-${number}-top` | `cabala-${number}-${number}` | `cabala-${number}-top` | `morphe-${number}-${number}` | `morphe-${number}-top` | `soybean-${number}-${number}` | `soybean-${number}-top` | `rp-${number}-${number}` | `rp-${number}-top` | `pretense-${number}-${number}` | `pretense-${number}-top` | `perjury-${number}-${number}` | `perjury-${number}-top` | `xebec-${number}-${number}` | `xebec-${number}-top` | `crazy-${number}-${number}` | `crazy-${number}-top` | `ciel-${number}-${number}` | `ciel-${number}-top` | `dais-${number}-${number}` | `dais-${number}-top`)[]) => {
        _id: {
            $in: (`test-${number}-${number}` | `test-${number}-top` | `lobby-${number}-${number}` | `lobby-${number}-top` | `offparty-${number}-${number}` | `offparty-${number}-top` | `wolf-${number}-${number}` | `wolf-${number}-top` | `allstar-${number}-${number}` | `allstar-${number}-top` | `ultimate-${number}-${number}` | `ultimate-${number}-top` | `cabala-${number}-${number}` | `cabala-${number}-top` | `morphe-${number}-${number}` | `morphe-${number}-top` | `soybean-${number}-${number}` | `soybean-${number}-top` | `rp-${number}-${number}` | `rp-${number}-top` | `pretense-${number}-${number}` | `pretense-${number}-top` | `perjury-${number}-${number}` | `perjury-${number}-top` | `xebec-${number}-${number}` | `xebec-${number}-top` | `crazy-${number}-${number}` | `crazy-${number}-top` | `ciel-${number}-${number}` | `ciel-${number}-top` | `dais-${number}-${number}` | `dais-${number}-top`)[];
        };
    };
    set: ($set: BookEvent) => Promise<import("mongodb").ModifyResult<BookEvent>>;
    del: (ids: (`test-${number}-${number}` | `test-${number}-top` | `lobby-${number}-${number}` | `lobby-${number}-top` | `offparty-${number}-${number}` | `offparty-${number}-top` | `wolf-${number}-${number}` | `wolf-${number}-top` | `allstar-${number}-${number}` | `allstar-${number}-top` | `ultimate-${number}-${number}` | `ultimate-${number}-top` | `cabala-${number}-${number}` | `cabala-${number}-top` | `morphe-${number}-${number}` | `morphe-${number}-top` | `soybean-${number}-${number}` | `soybean-${number}-top` | `rp-${number}-${number}` | `rp-${number}-top` | `pretense-${number}-${number}` | `pretense-${number}-top` | `perjury-${number}-${number}` | `perjury-${number}-top` | `xebec-${number}-${number}` | `xebec-${number}-top` | `crazy-${number}-${number}` | `crazy-${number}-top` | `ciel-${number}-${number}` | `ciel-${number}-top` | `dais-${number}-${number}` | `dais-${number}-top`)[]) => Promise<import("mongodb").DeleteResult>;
    isLive: () => Promise<boolean>;
    live: ($match: any, set: ($set: BookEvent) => Promise<import("mongodb").ModifyResult<BookEvent>>, del: (ids: (`test-${number}-${number}` | `test-${number}-top` | `lobby-${number}-${number}` | `lobby-${number}-top` | `offparty-${number}-${number}` | `offparty-${number}-top` | `wolf-${number}-${number}` | `wolf-${number}-top` | `allstar-${number}-${number}` | `allstar-${number}-top` | `ultimate-${number}-${number}` | `ultimate-${number}-top` | `cabala-${number}-${number}` | `cabala-${number}-top` | `morphe-${number}-${number}` | `morphe-${number}-top` | `soybean-${number}-${number}` | `soybean-${number}-top` | `rp-${number}-${number}` | `rp-${number}-top` | `pretense-${number}-${number}` | `pretense-${number}-top` | `perjury-${number}-${number}` | `perjury-${number}-top` | `xebec-${number}-${number}` | `xebec-${number}-top` | `crazy-${number}-${number}` | `crazy-${number}-top` | `ciel-${number}-${number}` | `ciel-${number}-top` | `dais-${number}-${number}` | `dais-${number}-top`)[]) => Promise<import("mongodb").DeleteResult>) => import("mongodb").ChangeStream<BookEvent>;
    query: ($match: any) => Promise<import("mongodb").Document[]>;
};
