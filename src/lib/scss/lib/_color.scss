@use "sass:color";
@use "sass:string";
@use "sass:math";

@function pen($type) {
  @return map-get($pals, 'pen-#{$type}');
}

@function lum_exc($val) {
  $val: ($val / 255);
  @if $val <= 0.03928 {
    @return $val / 12.92;
  } @else {
    @return math.pow(($val + 0.055) / 1.055, 2.4);
  }
}

@function luminance($val) {
  @return (lum_exc(red($val)) * 0.2126) + (lum_exc(green($val)) * 0.7152) +
    (lum_exc(blue($val)) * 0.0722);
}

@function contrastRatio($v1, $v2) {
  $v1: luminance($v1) + 0.05;
  $v2: luminance($v2) + 0.05;
  @if $v1 - $v2 > 0 {
    @return $v1 / $v2;
  } @else {
    @return $v2 / $v1;
  }
}

@function contrastRank($v1, $v2, $label) {
  $contrast: contrastRatio($v1, $v2);
  $prefix: '#{string.slice('#{$label}                ', 0, 28)}';
  @if 10 < $contrast {
    @debug '#{$prefix} AAA #{$contrast}';
    @return 'AAA';
  }
  @if 7 < $contrast {
    @debug '#{$prefix} AAA  #{$contrast}';
    @return 'AAA';
  }
  @if 4.5 < $contrast {
    @debug '#{$prefix} AA-  #{$contrast}';
    @return 'AA';
  }
  @if 3 < $contrast {
    @debug '#{$prefix} A--  #{$contrast}';
    @return 'A';
  }
  @if 2 < $contrast {
    @debug '#{$prefix} B--  #{$contrast}';
    @return 'B';
  }
  @if 1.1 < $contrast {
    @debug '#{$prefix} B--  #{$contrast}';
    @return 'Z';
  }
  @debug '#{$prefix} ---  #{$contrast}';
  @return '';
}

// https://qiita.com/lookman/items/d518f16c897c94bc4e78
@function Y2L($HH, $SS, $YY) {
  $hueblock: floor($HH / 60deg);
  $Yp: 0;
  $a: ($HH % 60) / 60deg;
  @if 0 == $hueblock {
    $Yp: $Pr + $Pg * $a;
  }
  @if 1 == $hueblock {
    $a: 1 - $a;
    $Yp: $Pg + $Pr * $a;
  }
  @if 2 == $hueblock {
    $Yp: $Pg + $Pb * $a;
  }
  @if 3 == $hueblock {
    $a: 1 - $a;
    $Yp: $Pb + $Pg * $a;
  }
  @if 4 == $hueblock {
    $Yp: $Pb + $Pr * $a;
  }
  @if 5 == $hueblock {
    $a: 1 - $a;
    $Yp: $Pr + $Pb * $a;
  }

  $Y: 0.01 * $YY;
  $S: 0.01 * $SS;
  $C: 2 * $S * (0.5 - $Yp);
  $L: 0;
  @if $Y > (1 - $C) / 2 {
    $L: ($Y + $C) / (1 + $C);
  } @else {
    $L: $Y / (1 - $C);
  }
  @return 100% * $L;
}

@function HSYA($HH, $SS, $YY, $AA: 1) {
  $HH: $HH % 360;
  $LL: Y2L($HH, $SS, $YY);
  @return hsla($HH, $SS, $LL, $AA);
}

@function fixByContrast($fixS, $fixY, $contrast, $HD, $col) {
  $newCol: $col;
  @for $step from 0 to 500 {
    $saturation: math.clamp(-100%, $step * $fixS, 100%);
    $lightness: math.clamp(-100%, $step * $fixY, 100%);
    $newCol: color.adjust($col, $hue: $HD, $saturation: $saturation, $lightness: $lightness);
    $cRatio: contrastRatio($col, $newCol);
    @if black == $newCol or white == $newCol or $contrast < $cRatio {
      // @debug "(#{$step} #{$cRatio}) #{$col} => #{$newCol}";
      @return $newCol;
    }
  }
  @return $newCol;
}

@function fix($col, $SS, $LL) {
  $_col: saturate($col, $SS);

  @if 0 == $LL {
    @return $_col;
  }

  @if 0 < $LL {
    @return lighten($_col, $LL);
  }

  @if $LL < 0 {
    @return darken($_col, -$LL);
  }
}

@function pal_Glass($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb: HSYA($HH, $SS, $YY);
  $rgba: HSYA($HH, $SS, $YY, 0.5);
  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'btn-off-#{$key}': transparent,
      'bg-#{$key}': $rgba,
      'edge-#{$key}': fixByContrast(-0.2%, +0.6%, 3.5, 0, $rgb),
      'pen-#{$key}': fixByContrast(-0.2%, +0.6%, 4.5, $DP, $rgb),
      'bold-#{$key}': fixByContrast(-0.2%, +0.6%, 7, $DP, $rgb),
      'line-#{$key}': fixByContrast(-0.6%, +0.2%, 3.5, $DP, $rgb),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-w.png')
    )
  );
  @return $pals;
}

@function pal_I($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb: HSYA($HH, $SS, $YY);
  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'bg-#{$key}': $rgb,
      'edge-#{$key}': fixByContrast(-0.2%, +0.6%, 3.5, 0, $rgb),
      'pen-#{$key}': fixByContrast(-0.2%, +0.6%, 4.5, $DP, $rgb),
      'bold-#{$key}': fixByContrast(+0.2%, +0.6%, 7, $DP, $rgb),
      'line-#{$key}': fixByContrast(+0.6%, +0.2%, 3.5, $DP, $rgb),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-w.png')
    )
  );
  @return $pals;
}

@function pal_S($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb: HSYA($HH, $SS, $YY);
  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'bg-#{$key}': $rgb,
      'edge-#{$key}': fixByContrast(-0.2%, +0.6%, 3.5, 0, $rgb),
      'pen-#{$key}': fixByContrast(-0.2%, -0.6%, 4.5, $DP, $rgb),
      'bold-#{$key}': fixByContrast(-0.2%, -0.6%, 7, $DP, $rgb),
      'line-#{$key}': fixByContrast(-0.3%, -0.3%, 3.5, $DP, $rgb),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-b.png')
    )
  );
  @return $pals;
}

@function pal_Board($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb_pen: HSYA($HH + $DP, $SS, $YY);
  $rgb: fixByContrast(0%, -0.9%, 7, $DN, $rgb_pen);

  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'bg-#{$key}': $rgb,
      'edge-#{$key}': fixByContrast(0%, +0.5%, 5.5, 0, $rgb),
      'pen-#{$key}': $rgb_pen,
      'bold-#{$key}': fixByContrast(-0.1%, +0.9%, 9, $DP, $rgb),
      'line-#{$key}': fixByContrast(+0.3%, +0.9%, 5.5, $DP, $rgb),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-w.png')
    )
  );
  @return $pals;
}

@function pal_Day($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb: HSYA($HH, $SS, $YY);
  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'bg-#{$key}': $rgb,
      'edge-#{$key}': fixByContrast(+0.3%, -0.5%, 3.5, 0, $rgb),
      'pen-#{$key}': fixByContrast(+0.1%, -0.5%, 4.5, $DP, $rgb),
      'bold-#{$key}': fixByContrast(-0.2%, -0.5%, 7, $DP, $rgb),
      'line-#{$key}': fixByContrast(+0.3%, -0.5%, 3.5, $DN, $rgb),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-b.png')
    )
  );
  @return $pals;
}

@function pal_DayT($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb: HSYA($HH, $SS, $YY);
  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'bg-#{$key}': $rgb,
      'edge-#{$key}': fixByContrast(+0.3%, -0.1%, 3.5, 0, $rgb),
      'pen-#{$key}': fixByContrast(+0.1%, -0.1%, 4.5, $DP, $rgb),
      'bold-#{$key}': fixByContrast(-0.2%, -0.1%, 7, $DP, $rgb),
      'line-#{$key}': fixByContrast(+0.3%, -0.1%, 3.5, $DN, $rgb),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-b.png')
    )
  );
  @return $pals;
}

@function pal_N($key, $dd, $HH, $SS, $YY) {
  $DB: +0.25 * $dd;
  $DP: +0.5 * $dd;
  $DR: +0.75 * $dd;
  $DN: -0.5 * $dd;

  $rgb_pen: HSYA($HH + $DP, $SS, $YY);
  $rgb: fixByContrast(-0.3%, -0.5%, 4.5, $DN, $rgb_pen);

  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'bg-#{$key}': $rgb,
      'edge-#{$key}': fixByContrast(-0.5%, -0.5%, 3.5, 0, $rgb),
      'pen-#{$key}': $rgb_pen,
      'bold-#{$key}': fixByContrast(+0.5%, +0.5%, 7, $DP, $rgb),
      'line-#{$key}': fixByContrast(+0.5%, +0.5%, 3.5, $DP, $rgb),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-w.png')
    )
  );
  @return $pals;
}

@function pal_btn($key, $dd, $rgb) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $pals: map-merge(
    $pals,
    (
      'btn-#{$key}': fixByContrast(+0.5%, +0.1%, 1.2, $DP, $rgb),
      'grad-#{$key}': fixByContrast(+0.5%, 0%, 1.2, $DN, $rgb),
      'shade-#{$key}': fixByContrast(0%, +0.5%, 1.2, $DP, $rgb),
      'btn-on-#{$key}': fixByContrast(+0.5%, +0.1%, 1.3, $DP, $rgb),
      'btn-off-#{$key}': fixByContrast(+0.3%, -0.1%, 1.15, $DP, $rgb)
    )
  );
  @return $pals;
}

$hues: (
  LONE: 326deg,   // 308 + 18 赤紫
  LOVE: 285deg,   // 271 + 14 紫
  VGRAVE: 234deg, // 234 -  0 青紫
  GRAVE: 192deg,  // 197 -  5 青
  FOAM: 174deg,   // 160 + 14 青緑
  ELSE: 140deg,   // 123 + 17 緑
  MUPET: 87deg,   //  86 +  1 黄緑
  BROAD: 49deg,   //  49 -  0 黄
  MOB: 27deg,     //  13 + 14 橙
  WOLF: 359deg,   // 344 + 15 赤
);

$hues_d: (
  // ナチュラルハーモニーに寄せる
  LONE: 15deg,   // 赤紫
  LOVE: 20deg,   // 紫
  VGRAVE: 25deg, //  青紫
  GRAVE: 20deg,  // 青
  FOAM: 15deg,   // 青緑
  ELSE: 15deg,   // 緑
  MUPET: 20deg,  // 黄緑
  BROAD: 25deg,  //  黄
  MOB: 20deg,    // 橙
  WOLF: 15deg,   // 赤
);

$Pr: 0.298912;
$Pg: 0.586611;
$Pb: 0.114478;

$pals: ();

@each $key, $_ in $hues {
  $HH: map-get($hues, $key);
  @if not $HH {
    @error "#{$key} #{$HH}";
  }
  $dd: map-get($hues_d, $key);
  @if not $dd {
    @error "#{$key} #{$dd}";
  }

  $pals: pal_Glass('title-bar-#{$key}', $dd, $HH, 75%, 30%);
  $pals: pal_Board('title-#{$key}', $dd, $HH, 13%, 61%);

  $pals: pal_I('ash-#{$key}', $dd, $HH, 12%, 30%);
  $pals: pal_I('prog-#{$key}', $dd, $HH, 35%, 15%);

  $pals: pal_S('stat-#{$key}', $dd, $HH, 35%, 45%);

  $pals: pal_Board('shout-D-#{$key}', $dd, $HH, 65%, 65%);

  $pals: pal_DayT('tweet-D-#{$key}', $dd, $HH, 50%, 43%);
  $pals: pal_DayT('think-D-#{$key}', $dd, $HH, 40%, 50%);
  $pals: pal_Day('std-D-#{$key}', $dd, $HH, 35%, 70%);
  $pals: pal_Day('aim-D-#{$key}', $dd, $HH, 15%, 75%);

  $pals: pal_N('shout-N-#{$key}', $dd, $HH, 50%, 80%);
  $pals: pal_N('tweet-N-#{$key}', $dd, $HH, 65%, 75%);
  $pals: pal_N('think-N-#{$key}', $dd, $HH, 25%, 85%);
  $pals: pal_N('std-N-#{$key}', $dd, $HH, 75%, 70%);
  $pals: pal_N('aim-N-#{$key}', $dd, $HH, 85%, 60%);
}

@mixin Marker($size, $col) {
  background: linear-gradient(transparent $size, $col 0);
}

@mixin Theme($handle, $type) {
  $grad: map-get($pals, 'grad-#{$type}');
  $edge: map-get($pals, 'edge-#{$type}');
  $btn: map-get($pals, 'btn-#{$type}');
  $bg: map-get($pals, 'bg-#{$type}');

  $pen: map-get($pals, 'pen-#{$type}');
  $line: map-get($pals, 'line-#{$type}');
  $bold: map-get($pals, 'bold-#{$type}');

  $btnOn: map-get($pals, 'btn-on-#{$type}');
  $btnOff: map-get($pals, 'btn-off-#{$type}');
  $shade: map-get($pals, 'shade-#{$type}');
  $mono_url: map-get($pals, 'mono-url-#{$type}');

  .#{$handle} {
    --grad: #{$grad};
    --edge: #{$edge};
    --emboss: #{$edge};
    --focus: #{$edge};

    --btn: #{$btn};
    --btnOn: #{$btnOn};
    --btnOff: #{$btnOff};

    --bg: #{$bg};
    --bgHi: #{$btn};
    --hide: #{mix($bg, $bold, 50%)};
    --shade: #{$shade};

    --pen: #{$pen};
    --line: #{$line};
    --bold: #{$bold};

    --bold_: #{mix($pen, $bold, 10%)};
    --bold__: #{mix($pen, $bold, 30%)};
    --bold___: #{mix($pen, $bold, 50%)};
    --bold____: #{mix($pen, $bold, 70%)};
    --bold_____: #{mix($pen, $bold, 90%)};

    --mono_url: #{$mono_url};

    color: var(--pen);
    background-color: var(--bg);
    border-color: var(--edge);
    text-emphasis-color: var(--line);
    text-decoration-color: var(--line);

    $c: contrastRank($bg, $shade,   '$bg:shade     #{$type}');
    $c: contrastRank($bg, $btn,     '$bg:$btn      #{$type}');
    $c: contrastRank($bg, $pen,     '$bg:$pen      #{$type}');
    $c: contrastRank($bg, $line,    '$bg:$line     #{$type}');
    $c: contrastRank($bg, $bold,    '$bg:$bold     #{$type}');
    $c: contrastRank($bg, $edge,    '$bg:$edge     #{$type}');
    $c: contrastRank($bg, $shade,   '$bg:$shade    #{$type}');
    $c: contrastRank($btn, $pen,    '$btn:$pen     #{$type}');
    $c: contrastRank($btn, $btnOff, '$btn:$btnOff  #{$type}');
    $c: contrastRank($grad, $btn,   '$grad:$btn    #{$type}');
  }
}
