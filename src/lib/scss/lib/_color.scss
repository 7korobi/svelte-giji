@use "sass:color";
@use "sass:string";
@use "sass:math";

@use "../../common/_color" as *;

@function pen($type) {
  @return map-get($pals, 'pen-#{$type}');
}

@function fix($col, $SS, $LL) {
  $_col: saturate($col, $SS);

  @if 0 == $LL {
    @return $_col;
  }

  @if 0 < $LL {
    @return lighten($_col, $LL);
  }

  @if $LL < 0 {
    @return darken($_col, -$LL);
  }
}

@function pal_Glass($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb: HSYA($HH, $SS, $YY);
  $rgba: HSYA($HH, $SS, $YY, 0.5);
  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'btn-off-#{$key}': transparent,
      'bg-#{$key}': $rgba,
      'edge-#{$key}': fixByContrast(+0.2%, +0.6%, 3.5, 0, $rgb, 'edge-#{$key}'),
      'pen-#{$key}': fixByContrast(-0.2%, +0.6%, 7, $DP, $rgb, 'pen-#{$key}'),
      'bold-#{$key}': fixByContrast(-0.2%, +0.6%, 5, $DP, $rgb, 'bold-#{$key}'),
      'line-#{$key}': fixByContrast(-0.6%, +0.2%, 3.5, $DP, $rgb, 'line-#{$key}'),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-w.png')
    )
  );
  @return $pals;
}

@function pal_Info($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb: HSYA($HH, $SS, $YY);
  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'bg-#{$key}': $rgb,
      'edge-#{$key}': fixByContrast(-0.2%, +0.6%, 3.5, 0, $rgb, 'edge-#{$key}'),
      'pen-#{$key}': fixByContrast(-0.2%, +0.6%, 7, $DP, $rgb, 'pen-#{$key}'),
      'bold-#{$key}': fixByContrast(+0.2%, +0.6%, 5, $DP, $rgb, 'bold-#{$key}'),
      'line-#{$key}': fixByContrast(+0.6%, +0.2%, 3.5, $DP, $rgb, 'line-#{$key}'),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-w.png')
    )
  );
  @return $pals;
}

@function pal_Stat($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb_pen: HSYA($HH + $DP, $SS, $YY);
  $rgb: fixByContrast(-0.3%, -0.5%, 6, $DN, $rgb_pen, 'pen-#{$key}');

  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'bg-#{$key}': $rgb,
      'edge-#{$key}': fixByContrast(-0.5%, -0.5%, 3.5, 0, $rgb, 'edge-#{$key}'),
      'pen-#{$key}': $rgb_pen,
      'bold-#{$key}': fixByContrast(+0.5%, +0.5%, 4, $DP, $rgb, 'bold-#{$key}'),
      'line-#{$key}': fixByContrast(+0.5%, +0.5%, 3.5, $DP, $rgb, 'line-#{$key}'),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-w.png')
    )
  );
  @return $pals;
}

@function pal_Board($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb_pen: HSYA($HH + $DP, $SS, $YY);
  $rgb: fixByContrast(-0.1%, -0.9%, 8, $DN, $rgb_pen, 'pen-#{$key}');

  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'bg-#{$key}': $rgb,
      'edge-#{$key}': fixByContrast(0%, +0.5%, 5.5, 0, $rgb, 'edge-#{$key}'),
      'pen-#{$key}': $rgb_pen,
      'bold-#{$key}': fixByContrast(-0.1%, +0.9%, 6.5, $DP, $rgb, 'bold-#{$key}'),
      'line-#{$key}': fixByContrast(+0.3%, +0.9%, 5.5, $DP, $rgb, 'line-#{$key}'),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-w.png')
    )
  );
  @return $pals;
}

@function pal_Night($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb_pen: HSYA($HH + $DP, $SS, $YY);
  $rgb: fixByContrast(-0.1%, -0.9%, 7, $DN, $rgb_pen, 'pen-#{$key}');

  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'bg-#{$key}': $rgb,
      'edge-#{$key}': fixByContrast(   0%, +0.5%, 3, 0, $rgb, 'edge-#{$key}'),
      'pen-#{$key}': $rgb_pen,
      'bold-#{$key}': fixByContrast(+0.5%, +0.5%, 5, $DP, $rgb, 'bold-#{$key}'),
      'line-#{$key}': fixByContrast(+1.5%, +0.5%, 4, $DP, $rgb, 'line-#{$key}'),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-w.png')
    )
  );
  @return $pals;
}

@function pal_NightT($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb_pen: HSYA($HH + $DP, $SS, $YY);
  $rgb: fixByContrast(-0.1%, -0.9%, 6, $DN, $rgb_pen, 'pen-#{$key}');

  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'bg-#{$key}': $rgb,
      'edge-#{$key}': fixByContrast(   0%, +0.5%, 3, 0, $rgb, 'edge-#{$key}'),
      'pen-#{$key}': $rgb_pen,
      'bold-#{$key}': fixByContrast(+0.5%, +0.5%, 4, $DP, $rgb, 'bold-#{$key}'),
      'line-#{$key}': fixByContrast(+1.5%, +0.5%, 4, $DP, $rgb, 'line-#{$key}'),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-w.png')
    )
  );
  @return $pals;
}


@function pal_Day($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb: HSYA($HH, $SS, $YY);
  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'bg-#{$key}': $rgb,
      'edge-#{$key}': fixByContrast(+0.3%, -0.5%, 3.5, 0, $rgb, 'edge-#{$key}'),
      'pen-#{$key}': fixByContrast(+0.1%, -0.5%, 7, $DP, $rgb, 'pen-#{$key}'),
      'bold-#{$key}': fixByContrast(-0.2%, -0.5%, 5, $DP, $rgb, 'bold-#{$key}'),
      'line-#{$key}': fixByContrast(+0.3%, -0.5%, 3.5, $DN, $rgb, 'line-#{$key}'),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-b.png')
    )
  );
  @return $pals;
}

@function pal_DayT($key, $dd, $HH, $SS, $YY) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $rgb: HSYA($HH, $SS, $YY);
  $pals: pal_btn($key, $dd, $rgb);
  $pals: map-merge(
    $pals,
    (
      'bg-#{$key}': $rgb,
      'edge-#{$key}': fixByContrast(+0.3%, -0.1%, 3.5, 0, $rgb, 'edge-#{$key}'),
      'pen-#{$key}': fixByContrast(+0.1%, -0.1%, 7, $DP, $rgb, 'pen-#{$key}'),
      'bold-#{$key}': fixByContrast(-0.2%, -0.1%, 4, $DP, $rgb, 'bold-#{$key}'),
      'line-#{$key}': fixByContrast(+0.3%, -0.1%, 3.5, $DN, $rgb, 'line-#{$key}'),
      'mono-url-#{$key}': url('//s3-ap-northeast-1.amazonaws.com/giji-assets/images/bg/grid-b.png')
    )
  );
  @return $pals;
}

@function pal_btn($key, $dd, $rgb) {
  $DP: +0.25 * $dd;
  $DN: -0.75 * $dd;

  $pals: map-merge(
    $pals,
    (
      'btn-#{$key}': fixByContrast(+0.5%, +0.1%, 1.2, $DP, $rgb, 'btn-#{$key}'),
      'grad-#{$key}': fixByContrast(+0.5%, 0%, 1.2, $DN, $rgb, 'grad-#{$key}'),
      'shade-#{$key}': fixByContrast(0%, +0.5%, 1.2, $DP, $rgb, 'shade-#{$key}'),
      'btn-on-#{$key}': fixByContrast(+0.5%, +0.1%, 1.55, $DP, $rgb, 'btn-on-#{$key}'),
      'btn-off-#{$key}': fixByContrast(+0.3%, -0.1%, 1.10, $DP, $rgb, 'btn-off-#{$key}')
    )
  );
  @return $pals;
}

$hues: (
  LONE: 326deg,   // 308 + 18 赤紫
  LOVE: 285deg,   // 271 + 14 紫
  VGRAVE: 220deg, // 234 - 14 青紫
  GRAVE: 193deg,  // 197 -  4 青
  FOAM: 174deg,   // 160 + 14 青緑
  ELSE: 140deg,   // 123 + 17 緑
  MUPET: 72deg,   //  86 - 14 黄緑
  BROAD: 49deg,   //  49 -  0 黄
  MOB: 27deg,     //  13 + 14 橙
  WOLF: 4deg,   // 344 + 20 赤
);

$hues_d: (
  // ナチュラルハーモニーに寄せる
  LONE: 20deg,   // 赤紫
  LOVE: 20deg,   // 紫
  VGRAVE: 20deg, //  青紫
  GRAVE: 25deg,  // 青
  FOAM: 30deg,   // 青緑
  ELSE: 50deg,   // 緑
  MUPET: 40deg,  // 黄緑
  BROAD: 33deg,  //  黄
  MOB: 25deg,    // 橙
  WOLF: 20deg,   // 赤
);

$pals: ();

@each $key, $_ in $hues {
  $HH: map-get($hues, $key);
  @if not $HH {
    @error "#{$key} #{$HH}";
  }
  $dd: map-get($hues_d, $key);
  @if not $dd {
    @error "#{$key} #{$dd}";
  }

  $pals: pal_Glass('title-bar-#{$key}', $dd, $HH, 75%, 30%);
  $pals: pal_Board('title-#{$key}', $dd, $HH, 15%, 66%);

  $pals: pal_Info('ash-#{$key}', $dd, $HH, 11%, 31%);
  $pals: pal_Info('prog-#{$key}', $dd, $HH, 35%, 15%);

  $pals: pal_Stat('stat-#{$key}', $dd, $HH, 99%, 70%);

  $pals: pal_Board('shout-D-#{$key}', $dd, $HH, 65%, 65%);
  $pals: pal_DayT('tweet-D-#{$key}', $dd, $HH, 35%, 50%);
  $pals: pal_DayT('think-D-#{$key}', $dd, $HH, 15%, 55%);
  $pals: pal_Day('std-D-#{$key}', $dd, $HH, 35%, 70%);
  $pals: pal_Day('aim-D-#{$key}', $dd, $HH, 15%, 75%);

  $pals: pal_Night('shout-N-#{$key}', $dd, $HH, 50%, 80%);
  $pals: pal_NightT('tweet-N-#{$key}', $dd, $HH, 99%, 60%);
  $pals: pal_NightT('think-N-#{$key}', $dd, $HH, 25%, 65%);
  $pals: pal_Night('std-N-#{$key}', $dd, $HH, 45%, 75%);
  $pals: pal_Night('aim-N-#{$key}', $dd, $HH, 25%, 80%);
}

@mixin Marker($size, $col) {
  background: linear-gradient(transparent $size, $col 0);
}

@mixin Theme($handle, $type) {
  $grad: map-get($pals, 'grad-#{$type}');
  $edge: map-get($pals, 'edge-#{$type}');
  $btn: map-get($pals, 'btn-#{$type}');
  $bg: map-get($pals, 'bg-#{$type}');

  $pen: map-get($pals, 'pen-#{$type}');
  $line: map-get($pals, 'line-#{$type}');
  $bold: map-get($pals, 'bold-#{$type}');

  $btnOn: map-get($pals, 'btn-on-#{$type}');
  $btnOff: map-get($pals, 'btn-off-#{$type}');
  $shade: map-get($pals, 'shade-#{$type}');
  $mono_url: map-get($pals, 'mono-url-#{$type}');

  .#{$handle} {
    --grad: #{$grad};
    --edge: #{$edge};
    --emboss: #{$edge};
    --focus: #{$edge};

    --btn: #{$btn};
    --btnOn: #{$btnOn};
    --btnOff: #{$btnOff};

    --bg: #{$bg};
    --bgHi: #{$btn};
    --hide: #{mix($bg, $bold, 50%)};
    --shade: #{$shade};

    --pen: #{$pen};
    --line: #{$line};
    --bold: #{$bold};

    --bold_: #{mix($pen, $bold, 10%)};
    --bold__: #{mix($pen, $bold, 30%)};
    --bold___: #{mix($pen, $bold, 50%)};
    --bold____: #{mix($pen, $bold, 70%)};
    --bold_____: #{mix($pen, $bold, 90%)};

    --mono_url: #{$mono_url};

    color: var(--pen);
    background-color: var(--bg);
    border-color: var(--edge);
    text-emphasis-color: var(--line);
    text-decoration-color: var(--line);

    $c: contrastRank($bg, $shade,   '$bg:shade     #{$type}');
    $c: contrastRank($bg, $btn,     '$bg:$btn      #{$type}');
    $c: contrastRank($bg, $pen,     '$bg:$pen      #{$type}');
    $c: contrastRank($bg, $line,    '$bg:$line     #{$type}');
    $c: contrastRank($bg, $bold,    '$bg:$bold     #{$type}');
    $c: contrastRank($bg, $edge,    '$bg:$edge     #{$type}');
    $c: contrastRank($bg, $shade,   '$bg:$shade    #{$type}');
    $c: contrastRank($btn, $pen,    '$btn:$pen     #{$type}');
    $c: contrastRank($btn, $btnOff, '$btn:$btnOff  #{$type}');
    $c: contrastRank($grad, $btn,   '$grad:$btn    #{$type}');
  }
}
