html,
body {
  margin: 0;
  tab-size: 6;
  -moz-tab-size: 6;
}

body {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-overflow-scrolling: touch;
  -webkit-touch-callout: none;
  text-size-adjust: 100%;
  user-select: none;

  font-variant-numeric: tabular-nums;
  font-feature-settings: 'palt';
  font-smooth: antialiased;
  font-kerning: normal;
  text-align: left;
  overflow-x: hidden;

  word-break: normal;
  word-wrap: break-word;
  overflow-wrap: break-word;
  vertical-align: baseline;
}

pre,
.text.mono {
  background-image: var(--mono_url);
}

.text.head:first-line {
  color: var(--bold);
}

::selection {
  background-color: var(--hide);
}

.col2,
.col3,
.colX,
.col_wide,
.col_narrow,
.column {
  column-rule-color: var(--emboss);
}

blockquote {
  border-color: var(--edge);
}

// SVG
rect.cluster,
.cluster > rect {
  stroke: var(--shade);
}

rect.pen,
.pen > rect {
  fill: var(--btnOff);
  stroke: var(--btnOn);
}

rect.path,
.path > rect {
  fill: var(--btnOff);
  stroke: var(--line);
}

.edgePath {
  > circle,
  > path.fill {
    fill: var(--line);

    &:focus-within {
      fill: var(--focus);
    }
  }

  > path.path {
    stroke: var(--line);

    &:focus-within {
      stroke: var(--focus);
    }
  }
}

text.pen,
text.pen > tspan,
text.path,
text.path > tspan {
  fill: var(--pen);
}

ul[data-checked='true'],
ul[data-checked='false'] {
  pointer-events: none;

  > li::before {
    color: #777;
  }
}

fieldset {
  color: var(--pen);
  border-color: var(--edge);
}

input,
select {
  color: var(--pen);
  background-color: var(--btnOff);
  border-color: var(--edge);
}

textarea {
  color: var(--pen);
  background-color: var(--bg);
  border: 0.5px solid var(--edge);
}

[data-ruby]:before {
  color: var(--bold);
}

b,
em,
strong,
th,
rt,
h6 {
  color: var(--bold);
}

label.btn,
label,
label[title],
label[cite] {
  background-color: var(--bgHi);
  color: var(--bold);
}

.ban,
.trix-dialog,
abbr.btn,
abbr,
abbr[title],
abbr[cite] {
  background-color: var(--emboss);
  color: var(--bg);
}

.note {
  color: var(--hide);
  border-color: var(--btnOff);
}

legend {
  background-color: var(--bgHi);
  color: var(--hide);
}

del,
.warn,
.name,
.date {
  color: var(--hide);
}

[title],
[data-tooltip] {
  &:before {
    background-color: var(--bgHi);
  }

  &:after {
    text-shadow: none;
    color: var(--pen);
    background-color: var(--bgHi);
  }
}

.bar {
  text-shadow: none;
  color: var(--emboss);
  background-color: var(--bg);
}

.name,
.btn,
.label,
a,
[href] {
  sup,
  sub,
  .badge {
    background-color: var(--emboss);
    color: var(--bg);
  }
}

kbd,
code {
  color: var(--pen);
  background-color: var(--bgHi);
}

[title],
[cite] {
  color: var(--bold);
}

// focus setting
:hover,
:focus {
  border-color: var(--focus);
  outline: none;
}

.text:focus-within {
  border-color: var(--focus);
  outline: dotted var(--focus) 1px;
}

rect.move,
.move > rect {
  stroke: var(--focus);
}

// bold setting
.point {
  border-color: var(--bold);
}

input,
select,
textarea,
fieldset {
  hr,
  hr:after {
    border-color: var(--focus);
  }

  .col2,
  .col3 {
    column-rule-color: var(--focus);
  }
}

input[type='submit'],
input[type='button'],
button,
.btn,
[href] {
  color: var(--pen);
  border-color: var(--btnOff);
  background-color: var(--btnOff);

  &:link {
    color: var(--pen);
  }

  &:visited {
    color: var(--pen);
  }

  &.contain {
    color: var(--bold);
  }

  &.disabled {
    color: var(--hide);
  }

  &.nuxt-link-exact-active,
  &.active,
  &.trix-active,
  &:active,
  &:checked {
    background: linear-gradient(0deg, var(--btnOn), var(--grad));
  }
}
